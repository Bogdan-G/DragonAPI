buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "9b"
group = "Reika.DragonAPI"
archivesBaseName = "DragonAPI"

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse/assets"
}

repositories {
    maven {
        url  "http://jcenter.bintray.com"
    }
    maven {
        name 'Forge'
        url 'http://files.minecraftforge.net/maven'
    }
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
        maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven/"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "K4 maven"
        url = "http://maven.k-4u.nl/"
    }
	maven {
        name = "tterrag Repo"
        url = "http://maven.tterrag.com"
    }
    maven {
        name "FireBall API Depot"
        url "http://dl.tsr.me/artifactory/libs-release-local"
    }
}

dependencies
{
	compile "codechicken:ForgeMultipart:1.7.10-1.2.0.345:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.46:dev"
	compile 'codechicken:CodeChickenLib:1.7.10-1.1.3.127:dev'
	compile 'codechicken:NotEnoughItems:1.7.10-1.0.4.80:dev'
	compile fileTree(dir: "libs", include: "*.jar")
}

processResources {
     from(sourceSets.main.resources.srcDirs) {
          include 'mcmod.info'
          expand 'version': project.version, 'mcversion': project.minecraft.version
     }

     from(sourceSets.main.resources.srcDirs) {
          exclude 'mcmod.info'
     }
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'Reika.DragonAPI.Auxiliary.DragonAPIASMHandler'
        attributes 'FMLAT': 'DragonAPI_at.cfg'
        attributes 'FMLCorePluginContainsFMLMod': 'false'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest {
        //attributes 'FMLCorePlugin': 'WhateverLoaderClass'
        //attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

artifacts {
    archives devJar
}